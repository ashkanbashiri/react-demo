{"version":3,"sources":["components/sortingAlgorithms/sortingAlgorithms.js","components/SortingVisualizer/SortingVisualizer.jsx","components/layout/Header.js","components/MachineLearning/MachineLearning.jsx","components/CovidTracker/CovidTracker.jsx","components/leetcode/IslandCounterAlgorithm.js","components/IslandCounter/IslandCounter.jsx","components/CovidSummary.jsx","components/CssFun/CssFun.jsx","App.js","serviceWorker.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","getquickSortAnimations","quickSortHelper","arr","low","high","pi","pivot","temp","partition","getHeapSortAnimations","n","heapify","largest","l","r","swap","SortingVisualizer","props","state","showmsg","arr_size","animation_speed","quickSortDisabled","heapSortDisabled","mergeSortDisabled","bubbleSortDisabled","sliderDisabled","resetArrayDisabled","theme","this","resetArray","document","body","classList","remove","randomIntFromInterval","setState","console","log","disableAll","arrayBars","getElementsByClassName","tooltips","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","tooltip","height","innerHTML","enableAll","getBubbleSortAnimations","javaScriptSortedArray","sort","a","b","sortedArray2","arraysAreEqual","e","target","value","Fragment","className","type","min","max","data-toggle","data-placement","title","disabled","onChange","handleSizeChange","id","onClick","mergeSort","quickSort","heapSort","bubbleSort","display","testSortingAlgorithms","fontFamily","background","fontSize","margin","data-period","data-rotate","position","map","idx","key","width","overflow","top","left","fontWeight","textAlign","marginTop","marginLeft","React","Component","random","arrayOne","arrayTwo","headerStyle","padding","Header","to","activeClassName","MachineLearning","CovidTracker","handleCountryChange","selectedOption","selectedCountry","select_","country_data","filter","element","country","bar_data","labels","dates","datasets","label","fill","lineTension","borderColor","borderWidth","data","confirmed","item","index","deaths","recovered","bind","isLoading","error","summary","countries","options","Chart","plugins","register","zoom","months","fetch","then","response","json","all","forEach","includes","Country","date_","Date","getMonth","getDate","Province","indexOf","Confirmed","Deaths","Recovered","active","Active","catch","mn","mx","autoFocus","maintainAspectRatio","responsive","text","legend","scales","xAxes","ticks","autoSkip","maxRotation","minRotation","pan","enabled","mode","sensitivity","drag","ref","chartReference","m","islandNumber","getIslandFinderAnimations","numIsland","count","DFSMarking","numIslands","IslandCounter","subArray","toString","n_islands","islandFinderDisabled","resetButtonDisabled","disableResetButton","concat","randColors","getRandomColor","nodes","add","enbleResetButton","islandFinder","row","idx2","CovidSummary","columns","field","rows","global","name","totalConfirmed","Global","TotalConfirmed","newConfirmed","NewConfirmed","totalDeaths","TotalDeaths","newDeaths","NewDeaths","totalRecovered","TotalRecovered","newRecovered","NewRecovered","lastUpdate","Countries","country_row","striped","hover","CssFun","playing","placeholder","href","App","useState","src","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b87c39a.chunk.js","sourcesContent":["export function getMergeSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n  return [animations, array];\n}\n\nfunction mergeSortHelper(\n  mainArray,\n  startIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    animations.push([i, j]);\n    // These are the values that we're comparing; we push them a second\n    // time to revert their color.\n    animations.push([i, j]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      // We overwrite the value at index k in the original array with the\n      // value at index i in the auxiliary array.\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      // We overwrite the value at index k in the original array with the\n      // value at index j in the auxiliary array.\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    animations.push([i, i]);\n    // These are the values that we're comparing; we push them a second\n    // time to revert their color.\n    animations.push([i, i]);\n    // We overwrite the value at index k in the original array with the\n    // value at index i in the auxiliary array.\n    animations.push([k, auxiliaryArray[i]]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    animations.push([j, j]);\n    // These are the values that we're comparing; we push them a second\n    // time to revert their color.\n    animations.push([j, j]);\n    // We overwrite the value at index k in the original array with the\n    // value at index j in the auxiliary array.\n    animations.push([k, auxiliaryArray[j]]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n\nexport function getquickSortAnimations(array) {\n  const animations = [];\n  quickSortHelper(array, 0, array.length - 1, animations);\n  return [animations, array];\n}\n\nfunction partition(arr, low, high, animations) {\n  const pivot = arr[high];\n  let i = low - 1; // index of smaller element\n  for (let j = low; j < high; j++) {\n    // If current element is smaller than the pivot\n    animations.push([j, high]);\n    animations.push([j, high]);\n    if (arr[j] < pivot) {\n      i++;\n      // swap arr[i] and arr[j]\n      animations.push([i, arr[j]]);\n      animations.push([j, arr[i]]);\n      let temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n    } else {\n      animations.push([high, pivot]);\n      animations.push([j, arr[j]]);\n    }\n  }\n\n  // swap arr[i+1] and arr[high] (or pivot)\n  animations.push([i + 1, high]);\n  animations.push([i + 1, high]);\n  animations.push([i + 1, arr[high]]);\n  animations.push([high, arr[i + 1]]);\n  let temp = arr[i + 1];\n  arr[i + 1] = arr[high];\n  arr[high] = temp;\n\n  return i + 1;\n}\n\n/* The main function that implements QuickSort() \n      arr[] --> Array to be sorted, \n      low  --> Starting index, \n      high  --> Ending index */\nfunction quickSortHelper(arr, low, high, animations) {\n  if (low < high) {\n    /* pi is partitioning index, arr[pi] is  \n              now at right place */\n    let pi = partition(arr, low, high, animations);\n\n    // Recursively sort elements before\n    // partition and after partition\n    quickSortHelper(arr, low, pi - 1, animations);\n    quickSortHelper(arr, pi + 1, high, animations);\n  }\n}\n\nexport function getBubbleSortAnimations(array) {\n  const animations = [];\n  const n = array.length;\n  for (let i = 0; i < n - 1; i++) {\n    for (let j = 0; j < n - i - 1; j++) {\n      animations.push([j, j + 1]);\n      animations.push([j, j + 1]);\n      if (array[j] > array[j + 1]) {\n        // swap arr[j+1] and arr[i]\n        animations.push([j, array[j + 1]]);\n        animations.push([j + 1, array[j]]);\n        let temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n      } else {\n        animations.push([j, array[j]]);\n        animations.push([j + 1, array[j + 1]]);\n      }\n    }\n  }\n  return [animations, array];\n}\n\nexport function getHeapSortAnimations(array, n) {\n  const animations = [];\n\n  // Build heap (rearrange array)\n  for (let i = Math.floor(n / 2); i >= 0; i = i - 1) {\n    heapify(array, n, i, animations);\n  }\n\n  // One by one extract an element from heap\n  for (let j = n - 1; j > 0; j = j - 1) {\n    // Move current root to end\n    //animations.push([0, i])\n    animations.push([0, j]);\n    animations.push([j, 0]);\n    animations.push([0, array[j]]);\n    animations.push([j, array[0]]);\n    let temp = array[0];\n    array[0] = array[j];\n    array[j] = temp;\n\n    // call max heapify on the reduced heap\n    heapify(array, j, 0, animations);\n  }\n  return [animations, array];\n}\n\nfunction heapify(array, n, i, animations) {\n  let largest = i; // Initialize largest as root\n  let l = 2 * i + 1; // left = 2*i + 1\n  let r = 2 * i + 2; // right = 2*i + 2\n\n  // If left child is larger than root\n  if (l < n && array[l] > array[largest]) largest = l;\n\n  // If right child is larger than largest so far\n  if (r < n && array[r] > array[largest]) largest = r;\n\n  // If largest is not root\n  if (!(largest == i)) {\n    animations.push([largest, i]);\n    animations.push([i, largest]);\n    animations.push([largest, array[i]]);\n    animations.push([i, array[largest]]);\n    let swap = array[i];\n    array[i] = array[largest];\n    array[largest] = swap;\n\n    // Recursively heapify the affected sub-tree\n    heapify(array, n, largest, animations);\n  }\n}\n","// @ts-nocheck\nimport React from \"react\";\nimport {\n  getMergeSortAnimations,\n  getquickSortAnimations,\n  getBubbleSortAnimations,\n  getHeapSortAnimations,\n} from \"../sortingAlgorithms/sortingAlgorithms.js\";\nimport \"./SortingVisualizer.scss\";\n\nconst PRIMARY_COLOR = \"#24cfaa\";\nconst NEUTRAL_COLOR = \"#0000FF\";\n\n// This is the color of array bars that are being compared throughout the animations.\nconst SECONDARY_COLOR = \"orangered\";\n\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      array: [],\n      showmsg: false,\n      arr_size: 100,\n      animation_speed: 10,\n      quickSortDisabled: false,\n      heapSortDisabled: false,\n      mergeSortDisabled: false,\n      bubbleSortDisabled: false,\n      sliderDisabled: false,\n      resetArrayDisabled: false,\n      theme: \"light\",\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n    document.body.classList.remove(\"darkmode\");\n  }\n\n  resetArray() {\n    const array = [];\n    for (let i = 0; i < this.state.arr_size; i++) {\n      array.push(randomIntFromInterval(1, 400));\n    }\n    this.setState({ array: array });\n    if (array.length >= 100) {\n      this.setState({ animation_speed: 10 });\n    } else {\n      this.setState({ animation_speed: 15 });\n    }\n  }\n\n  disableAll() {\n    this.setState({\n      quickSortDisabled: true,\n      heapSortDisabled: true,\n      mergeSortDisabled: true,\n      bubbleSortDisabled: true,\n      sliderDisabled: true,\n      resetArrayDisabled: true,\n    });\n  }\n  enableAll() {\n    this.setState({\n      quickSortDisabled: false,\n      heapSortDisabled: false,\n      mergeSortDisabled: false,\n      bubbleSortDisabled: false,\n      sliderDisabled: false,\n      resetArrayDisabled: false,\n    });\n  }\n  mergeSort() {\n    console.log(this.state.animation_speed);\n    this.disableAll();\n    const [animations, temp] = getMergeSortAnimations(this.state.array.slice());\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const tooltips = document.getElementsByClassName(\"tooltiptext\");\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * this.state.animation_speed);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          const tooltip = tooltips[barOneIdx];\n          barOneStyle.height = `${newHeight}px`;\n          tooltip.innerHTML = newHeight;\n          if (i == animations.length - 1) this.enableAll();\n        }, i * this.state.animation_speed);\n      }\n    }\n  }\n\n  quickSort() {\n    this.disableAll();\n    const [animations, temp] = getquickSortAnimations(this.state.array.slice());\n    console.log(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const tooltips = document.getElementsByClassName(\"tooltiptext\");\n      const isColorChange = i % 4 < 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * this.state.animation_speed);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          const tooltip = tooltips[barOneIdx];\n          barOneStyle.height = `${newHeight}px`;\n          tooltip.innerHTML = newHeight;\n          if (i == animations.length - 1) this.enableAll();\n        }, i * this.state.animation_speed);\n      }\n    }\n  }\n\n  afterSort() {}\n\n  heapSort() {\n    this.disableAll();\n    const [animations, temp] = getHeapSortAnimations(\n      this.state.array.slice(),\n      this.state.arr_size\n    );\n    console.log(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const tooltips = document.getElementsByClassName(\"tooltiptext\");\n      const isColorChange = i % 4 < 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * this.state.animation_speed);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          const tooltip = tooltips[barOneIdx];\n          barOneStyle.height = `${newHeight}px`;\n          tooltip.innerHTML = newHeight;\n          if (i == animations.length - 1) this.enableAll();\n        }, i * this.state.animation_speed);\n      }\n    }\n  }\n\n  bubbleSort() {\n    this.disableAll();\n    this.setState({ showmsg: true });\n    setTimeout(() => {\n      this.setState({ showmsg: false });\n    }, 3000);\n    const [animations, temp] = getBubbleSortAnimations(\n      this.state.array.slice()\n    );\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const tooltips = document.getElementsByClassName(\"tooltiptext\");\n      const isColorChange = i % 4 < 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * this.state.animation_speed);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          const tooltip = tooltips[barOneIdx];\n          barOneStyle.height = `${newHeight}px`;\n          tooltip.innerHTML = newHeight;\n          if (i == animations.length - 1) this.enableAll();\n        }, i * this.state.animation_speed);\n      }\n    }\n  }\n\n  testSortingAlgorithms() {\n    for (let i = 0; i < 100; i++) {\n      const array = [];\n      const length = randomIntFromInterval(40, 150);\n      for (let i = 0; i < length; i++) {\n        array.push(randomIntFromInterval(1, 1000));\n      }\n      const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n      const [tempArray3, sortedArray3] = getquickSortAnimations(array.slice());\n      const [tempArray, sortedArray] = getMergeSortAnimations(array.slice());\n      const [tempArray2, sortedArray2] = getHeapSortAnimations(\n        array.slice(),\n        array.length\n      );\n\n      if (arraysAreEqual(javaScriptSortedArray, sortedArray2) == false) {\n        console.log(array.slice());\n        console.log(sortedArray2);\n      }\n    }\n  }\n\n  handleSizeChange(e) {\n    this.setState({ arr_size: e.target.value }, () => {\n      const array = [];\n      for (let i = 0; i < this.state.arr_size; i++) {\n        array.push(randomIntFromInterval(1, 400));\n      }\n      this.setState({ array: array });\n      console.log(this.state.arr_size);\n    });\n  }\n  //<div className=\"tooltiptext\">{this.state.arr_size}</div>\n\n  render() {\n    const { array } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className=\"grid-container-sort\">\n          <div className=\"header-sort\">\n            <div>\n              <div className=\"input-range\">\n                <p>\n                  <b>Array Size:</b>\n                </p>\n                <input\n                  type=\"range\"\n                  min=\"5\"\n                  max=\"200\"\n                  data-toggle=\"tooltip\"\n                  data-placement=\"left\"\n                  title={this.state.arr_size}\n                  className=\"input-range\"\n                  disabled={this.state.sliderDisabled}\n                  value={this.state.arr_size}\n                  onChange={(e) => {\n                    this.handleSizeChange(e);\n                  }}\n                  id=\"slider\"\n                />\n              </div>\n              <button\n                id=\"resetArray\"\n                className=\"btn btn-dark hvr-sweep-to-right\"\n                disabled={this.state.resetArrayDisabled}\n                type=\"button\"\n                onClick={() => this.resetArray()}\n              >\n                New Random List\n              </button>\n            </div>\n            <div>\n              <button\n                id=\"mergeSort\"\n                disabled={this.state.mergeSortDisabled}\n                className=\"btn hvr-sweep-to-right\"\n                onClick={() => this.mergeSort()}\n              >\n                Merge Sort\n              </button>\n            </div>\n            <div>\n              <button\n                id=\"quickSort\"\n                disabled={this.state.quickSortDisabled}\n                className=\"btn hvr-sweep-to-right\"\n                onClick={() => this.quickSort()}\n              >\n                Quick Sort\n              </button>\n            </div>\n            <div>\n              <button\n                id=\"heapSort\"\n                disabled={this.state.heapSortDisabled}\n                className=\"btn hvr-sweep-to-right\"\n                onClick={() => this.heapSort()}\n              >\n                Heap Sort\n              </button>\n            </div>\n            <div>\n              <button\n                id=\"bubbleSort\"\n                disabled={this.state.bubbleSortDisabled}\n                className=\"btn hvr-sweep-to-right\"\n                onClick={() => this.bubbleSort()}\n              >\n                Bubble Sort\n              </button>\n            </div>\n            <button\n              className=\"btn\"\n              style={{ display: \"None\" }}\n              onClick={() => this.testSortingAlgorithms()}\n            >\n              Test\n            </button>\n          </div>\n          <div className=\"middle-sort\">\n            <h1\n              style={{\n                fontFamily: `Montserrat, sans-serif`,\n                background: `transparent`,\n                fontSize: `14px`,\n                margin: `0.4em 0`,\n              }}\n            >\n              Technologies:\n              <span\n                className=\"txt-rotate\"\n                data-period=\"1000\"\n                data-rotate='[ \" HTML5\", \" CSS3\", \" React\", \" Javascript\" ]'\n              ></span>\n            </h1>\n            <div\n              id=\"bars\"\n              style={{\n                position: \"relative\",\n                height: \"100%\",\n              }}\n            >\n              {array.map((value, idx) => (\n                <div\n                  className=\"array-bar\"\n                  key={idx}\n                  style={{\n                    backgroundColor: PRIMARY_COLOR,\n                    height: `${value}px`,\n                    width: `5px`,\n                    margin: `0px 1px`,\n                    overflow: `hidden`,\n                  }}\n                >\n                  <div className=\"tooltiptext\">{value}</div>\n                </div>\n              ))}\n            </div>\n\n            <div\n              id=\"msg\"\n              style={{\n                display: this.state.showmsg ? \"block\" : \"None\",\n                position: `fixed`,\n                width: `500px`,\n                height: `100px`,\n                top: `50%`,\n                left: `50%`,\n                color: `gray`,\n                fontWeight: \"bold\",\n                backgroundColor: \"#fff\",\n                textAlign: \"center\",\n                marginTop: `-100px`,\n                marginLeft: `-250px`,\n              }}\n            >\n              SPOILERS! BubbleSort is a bit slow --> O(N^2)\n            </div>\n          </div>\n        </div>\n        <div className=\"footer\">\n          <p>\n            <b>\n              Visualizing Sorting Algorithms, Developed with React Framework.\n              Written by Ashkan Bashiri.\n            </b>\n          </p>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction arraysAreEqual(arrayOne, arrayTwo) {\n  if (arrayOne.length !== arrayTwo.length) return false;\n  for (let i = 0; i < arrayOne.length; i++) {\n    if (arrayOne[i] !== arrayTwo[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n","import React from \"react\";\nimport \"./Header.scss\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <React.Fragment>\n      <div id=\"particles-js\"></div>\n      <header style={headerStyle}>\n        <h1>\n          <NavLink className=\"my-class\" to=\"/\">\n            Ashkan's React Application\n          </NavLink>\n        </h1>\n        <NavLink className=\"my-class\" activeClassName=\"active-link\" to=\"/sv\">\n          Sorting-Visualizer{\" \"}\n        </NavLink>\n        |{\" \"}\n        <NavLink\n          className=\"my-class\"\n          activeClassName=\"active-link\"\n          to=\"/covid_summary\"\n        >\n          Covid19-Summary{\" \"}\n        </NavLink>\n        |{\" \"}\n        <NavLink\n          className=\"my-class\"\n          activeClassName=\"active-link\"\n          to=\"/covid19\"\n        >\n          Covid19-Daily{\" \"}\n        </NavLink>\n        |{\" \"}\n        <NavLink\n          className=\"my-class\"\n          activeClassName=\"active-link\"\n          to=\"/leetcode\"\n        >\n          IslandFinder{\" \"}\n        </NavLink>\n        |{\" \"}\n        <NavLink className=\"my-class\" activeClassName=\"active-link\" to=\"/ml\">\n          DataScience Projects{\" \"}\n        </NavLink>\n        |{\" \"}\n        <NavLink\n          className=\"my-class\"\n          activeClassName=\"active-link\"\n          to=\"/cssfun\"\n        >\n          Fun With Css{\" \"}\n        </NavLink>\n      </header>\n    </React.Fragment>\n  );\n}\n\nconst headerStyle = {\n  background: \"#333\",\n  color: \"#fff\",\n  textAlign: \"center\",\n  padding: \"10px\",\n};\n\nconst linkStyle = {\n  textDecoration: \"none\",\n  \":hover\": {\n    textDecoration: \"underline\",\n    fontWeight: \"Bold\",\n  },\n  \":active\": {\n    textDecoration: \"underline\",\n    fontWeight: \"Bold\",\n    color: \"Blue\",\n  },\n};\nconst aStyle = {\n  color: \"#fff\",\n  textDecoration: \"none\",\n  \":hover\": {\n    textDecoration: \"underline\",\n    color: \"Blue\",\n  },\n  \":active\": {\n    textDecoration: \"underline\",\n    fontWeight: \"Bold\",\n    color: \"Blue\",\n  },\n};\n\nexport default Header;\n","import React from 'react';\nimport './MachineLearning.css';\n\n\n// Change this value for the speed of the animations.\n\n// Change this value for the number of bars (value) in the array.\n\n// This is the main color of the array bars.\n\n\nexport default class MachineLearning extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"grid-container\">\n                    <div className=\"header\">\n                        <h1>Machine Learning Examples</h1>\n                        <p>Coming Soon ...</p>\n                    </div>\n                </div>\n                <div className=\"footer\">\n                    <p><b>Visualizing Machine Learning Algorithms, Developed with React Framework. Written by Ashkan Bashiri.</b></p>\n                </div>\n            </React.Fragment>\n        )\n    }\n}","import React from \"react\";\nimport \"./CovidTracker.scss\";\nimport { Chart, Line, Bar } from \"react-chartjs-2\";\nimport Select from \"react-select\";\nimport zoom from \"chartjs-plugin-zoom\";\nimport Hammer from \"hammerjs\";\n\n// Change this value for the speed of the animations.\n\n// Change this value for the number of bars (value) in the array.\n\n// This is the main color of the array bars.\n\nexport default class CovidTracker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCountryChange = this.handleCountryChange.bind(this);\n\n    this.state = {\n      isLoading: false,\n      error: false,\n      summary: [],\n      countries: [],\n      country_data: [],\n      labels: [],\n      datasets: [],\n      selectedCountry: \"\",\n      options: [],\n      bar_data: {},\n    };\n  }\n\n  componentWillMount() {\n    Chart.plugins.register(zoom);\n  }\n  componentWillMount() {\n    Chart.plugins.register(zoom);\n  }\n  handleCountryChange = (selectedOption) => {\n    this.setState({ selectedCountry: selectedOption.value }, () => {\n      const select_ = this.state.country_data.filter(\n        (element) => element.country == this.state.selectedCountry\n      );\n      var bar_data = {\n        labels: select_[0].dates,\n        datasets: [\n          {\n            label: \"#Confirmed\",\n            fill: false,\n            lineTension: 0.5,\n            backgroundColor: \"rgba(33,47,61,1)\",\n            borderColor: \"rgba(33,47,61,1)\",\n            borderWidth: 1,\n            data: select_[0].confirmed.map(function (item, index) {\n              // In this case item correspond to currentValue of array a,\n              // using index to get value from array b\n              return item - select_[0].confirmed[index - 1] || 0;\n            }),\n          },\n          {\n            label: \"#Deaths\",\n            fill: false,\n            lineTension: 0.5,\n            backgroundColor: \"rgba(205,92,92,1)\",\n            borderColor: \"rgba(205,92,92,1)\",\n            borderWidth: 1,\n            data: select_[0].deaths.map(function (item, index) {\n              // In this case item correspond to currentValue of array a,\n              // using index to get value from array b\n              return item - select_[0].deaths[index - 1] || 0;\n            }),\n          },\n          {\n            label: \"#Recovered\",\n            fill: false,\n            lineTension: 0.5,\n            backgroundColor: \"rgba(72,201,176,1)\",\n            borderColor: \"rgba(72,201,176,1)\",\n            borderWidth: 1,\n            data: select_[0].recovered.map(function (item, index) {\n              // In this case item correspond to currentValue of array a,\n              // using index to get value from array b\n              return item - select_[0].recovered[index - 1] || 0;\n            }),\n          },\n        ],\n      };\n      var labels = select_[0].dates;\n      var datasets = [\n        {\n          label: \"#Confirmed\",\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: \"rgba(33,47,61,1)\",\n          borderColor: \"rgba(33,47,61,1)\",\n          borderWidth: 1,\n          data: select_[0].confirmed,\n        },\n        {\n          label: \"#Deaths\",\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: \"rgba(205,92,92,1)\",\n          borderColor: \"rgba(205,92,92,1)\",\n          borderWidth: 1,\n          data: select_[0].deaths,\n        },\n        {\n          label: \"#Recovered\",\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: \"rgba(72,201,176,1)\",\n          borderColor: \"rgba(72,201,176,1)\",\n          borderWidth: 1,\n          data: select_[0].recovered,\n        },\n      ];\n      this.setState(\n        { labels: labels, datasets: datasets, bar_data: bar_data },\n        () => {\n          this.setState({\n            labels: labels,\n            datasets: datasets,\n            bar_data: bar_data,\n          });\n        }\n      );\n    });\n  };\n  componentDidMount() {\n    this.setState({ isLoading: true });\n    const options = [];\n    const months = [\n      \"Jan \",\n      \"Feb \",\n      \"Mar \",\n      \"Apr \",\n      \"May \",\n      \"Jun \",\n      \"Jul \",\n      \"Aug \",\n      \"Sep \",\n      \"Oct \",\n      \"Nov \",\n      \"Dec \",\n    ];\n    fetch(\"https://api.covid19api.com/all\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((all) => {\n        let countries = [];\n        const country_data = [];\n        all.forEach((element) => {\n          if (!countries.includes(element.Country)) {\n            countries.push(element.Country);\n            let date_ = new Date(element.Date);\n            country_data.push({\n              country: element.Country,\n              confirmed: [element.Confirmed],\n              deaths: [element.Deaths],\n              recovered: [element.Recovered],\n              active: [element.Active],\n              dates: [months[date_.getMonth()] + date_.getDate()],\n            });\n            options.push({ value: element.Country, label: element.Country });\n          } else {\n            let date_ = new Date(element.Date);\n\n            if (\n              !country_data\n                .filter((data) => data.country === element.Country)[0]\n                .dates.includes(months[date_.getMonth()] + date_.getDate())\n            ) {\n              country_data\n                .filter((data) => data.country === element.Country)[0]\n                .confirmed.push(element.Confirmed);\n              country_data\n                .filter((data) => data.country === element.Country)[0]\n                .deaths.push(element.Deaths);\n              country_data\n                .filter((data) => data.country === element.Country)[0]\n                .recovered.push(element.Recovered);\n              country_data\n                .filter((data) => data.country === element.Country)[0]\n                .active.push(element.Active);\n              country_data\n                .filter((data) => data.country === element.Country)[0]\n                .dates.push(months[date_.getMonth()] + date_.getDate());\n            } else {\n              if (element.Province !== \"\") {\n                country_data.filter(\n                  (data) => data.country === element.Country\n                )[0].confirmed[\n                  country_data\n                    .filter((data) => data.country === element.Country)[0]\n                    .dates.indexOf(months[date_.getMonth()] + date_.getDate())\n                ] += element.Confirmed;\n\n                country_data.filter(\n                  (data) => data.country === element.Country\n                )[0].deaths[\n                  country_data\n                    .filter((data) => data.country === element.Country)[0]\n                    .dates.indexOf(months[date_.getMonth()] + date_.getDate())\n                ] += element.Deaths;\n              }\n\n              country_data.filter(\n                (data) => data.country === element.Country\n              )[0].recovered[\n                country_data\n                  .filter((data) => data.country === element.Country)[0]\n                  .dates.indexOf(months[date_.getMonth()] + date_.getDate())\n              ] += element.Recovered;\n\n              country_data.filter(\n                (data) => data.country === element.Country\n              )[0].active[\n                country_data\n                  .filter((data) => data.country === element.Country)[0]\n                  .dates.indexOf(months[date_.getMonth()] + date_.getDate())\n              ] += element.Active;\n            }\n\n            //}\n          }\n        });\n        this.setState({ options });\n        this.setState({ countries });\n        this.setState({ country_data });\n        this.setState({ error: false });\n        this.setState({ isLoading: false });\n        console.log(country_data);\n      }).catch((error) => {\n        this.setState({ error: true });\n      });\n  }\n\n  rnd_range(mn, mx) {\n    return Math.random() * (mx - mn) + mn;\n  }\n\n  render() {\n    if (this.state.error) {\n      return <p>Error retrieving data from API</p>;\n    }\n    if (this.state.isLoading) {\n      return <p>Fetching Covid-19 data...</p>;\n    }\n    return (\n      <React.Fragment>\n        <div className=\"grid-container\">\n          <div className=\"header\">\n            <h1>Covid19 Tracker App</h1>\n          </div>\n\n          <p className=\"label\">Select a Country (Daily Updates):</p>\n          <div className=\"selector1\">\n            <Select\n              onChange={this.handleCountryChange}\n              options={this.state.options}\n              autoFocus={true}\n            />\n          </div>\n\n          <div className=\"middle\">\n            <Line\n              data={this.state}\n              options={{\n                maintainAspectRatio: true,\n                responsive: true,\n                title: {\n                  display: true,\n                  text: \"Statistics for \" + this.state.selectedCountry,\n                  fontSize: 20,\n                },\n                legend: {\n                  display: true,\n                  position: \"right\",\n                },\n                scales: {\n                  xAxes: [\n                    {\n                      ticks: {\n                        autoSkip: true,\n                        maxRotation: 0,\n                        minRotation: 0,\n                      },\n                    },\n                  ],\n                },\n                pan: {\n                  enabled: true,\n                  mode: \"xy\", // is panning about the y axis neccessary for bar charts?\n                },\n                zoom: {\n                  sensitivity: 0.5,\n                  drag: false,\n                  enabled: true,\n                  mode: \"x\",\n                },\n              }}\n            />\n            <br></br>\n            <Line\n              ref={this.chartReference}\n              data={this.state.bar_data}\n              options={{\n                maintainAspectRatio: true,\n                responsive: true,\n                title: {\n                  display: true,\n                  text: \"Daily statistics for \" + this.state.selectedCountry,\n                  fontSize: 20,\n                },\n                legend: {\n                  display: true,\n                  position: \"right\",\n                },\n                scales: {\n                  xAxes: [\n                    {\n                      ticks: {\n                        autoSkip: true,\n                        maxRotation: 0,\n                        minRotation: 0,\n                      },\n                    },\n                  ],\n                },\n                pan: {\n                  enabled: true,\n                  mode: \"xy\", // is panning about the y axis neccessary for bar charts?\n                },\n                zoom: {\n                  sensitivity: 0.5,\n                  drag: false,\n                  enabled: true,\n                  mode: \"x\",\n                },\n              }}\n            />\n          </div>\n          <div className=\"footer\">\n            <p>\n              <b>\n                Visualizing Covid19 data, Developed with React Framework.\n                Written by Ashkan Bashiri.\n              </b>\n            </p>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","var n = 0;\nvar m = 0;\nvar animations = [];\nvar islandNumber = 0;\n\nexport default function getIslandFinderAnimations(array) {\n  animations = [];\n  islandNumber = 0;\n  var numIsland = 0;\n  numIsland = numIslands(array);\n  return [animations, numIsland];\n}\n\n// @ts-ignore\nfunction numIslands(array) {\n  let count = 0;\n  n = array.length;\n  if (n == 0) return 0;\n  m = array[0].length;\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < m; j++) {\n      if (array[i][j] == \"1\") {\n        DFSMarking(array, i, j);\n        ++count;\n        islandNumber += 1;\n      }\n    }\n  }\n  return count;\n}\n\n// @ts-ignore\nfunction DFSMarking(array, i, j) {\n  if (i < 0 || j < 0 || i >= n || j >= m || array[i][j] != \"1\") return;\n  array[i][j] = \"0\";\n  animations.push([i, j, islandNumber]);\n  DFSMarking(array, i + 1, j);\n  DFSMarking(array, i - 1, j);\n  DFSMarking(array, i, j + 1);\n  DFSMarking(array, i, j - 1);\n}\n","import React from \"react\";\nimport islandCounter from \"../leetcode/IslandCounterAlgorithm.js\";\nimport \"./IslandCounter.scss\";\nimport getIslandFinderAnimations from \"../leetcode/IslandCounterAlgorithm.js\";\n\nconst PRIMARY_COLOR = \"#57a18b\";\nconst NEUTRAL_COLOR = \"#0000FF\";\n\n// This is the color of array bars that are being compared throughout the animations.\nconst SECONDARY_COLOR = \"orangered\";\n\nexport default class IslandCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    let array = [];\n    for (let i = 0; i < 10; i++) {\n      const subArray = [];\n      for (let j = 0; j < 20; j++) {\n        subArray.push(Math.floor(Math.random() * 2).toString());\n      }\n      array.push(subArray);\n    }\n    this.state = {\n      array: array,\n      animation_speed: 50,\n      n_islands: \"???\",\n      islandFinderDisabled: false,\n      resetButtonDisabled: false,\n    };\n  }\n  getRandomColor() {\n    var letters = \"0123456789ABCDEF\";\n    var color = \"#\";\n    for (var i = 0; i < 3; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n  disableResetButton() {\n    this.setState(\n      { resetButtonDisabled: true, islandFinderDisabled: true },\n      () =>\n        this.setState({ resetButtonDisabled: true, islandFinderDisabled: true })\n    );\n  }\n  enbleResetButton() {\n    this.setState({ resetButtonDisabled: false, islandFinderDisabled: false });\n  }\n  islandFinder() {\n    this.disableResetButton();\n    const arr = [];\n    for (let i = 0; i < 10; i++) {\n      const subArray = [];\n      for (let j = 0; j < 20; j++) {\n        subArray.push(this.state.array[i][j]);\n      }\n      arr.push(subArray);\n    }\n    const [animations, numIslands] = getIslandFinderAnimations(arr);\n    console.log(this.state.array);\n    this.setState({\n      n_islands: numIslands\n        .toString()\n        .concat(`, Each island is in a different color.`),\n    });\n    const randColors = [];\n    for (let i = 0; i < numIslands; i++) {\n      randColors.push(this.getRandomColor());\n    }\n    for (let i = 0; i < animations.length; i++) {\n      const nodes = document.getElementsByClassName(\"node\");\n      const [m, n, islandNumber] = animations[i];\n      setTimeout(() => {\n        nodes[m * 20 + n].classList.add(\"checked\");\n        nodes[m * 20 + n].style.backgroundColor = randColors[islandNumber];\n        if (i == animations.length - 1) this.enbleResetButton();\n      }, i * this.state.animation_speed);\n    }\n  }\n  resetArray() {\n    const nodes = document.getElementsByClassName(\"node\");\n    let array = [];\n    for (let i = 0; i < 10; i++) {\n      const subArray = [];\n      for (let j = 0; j < 20; j++) {\n        subArray.push(Math.floor(Math.random() * 2).toString());\n        if (subArray[j] == \"1\") {\n          nodes[i * 20 + j].style.backgroundColor = \"#333\";\n        } else {\n          nodes[i * 20 + j].style.backgroundColor = \"#eee\";\n        }\n        nodes[i * 20 + j].classList.remove(\"checked\");\n      }\n      array.push(subArray);\n    }\n    this.setState({ array: array, n_islands: \"???\" });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div>\n          <button\n            className=\"btn hvr-sweep-to-right\"\n            onClick={() => this.islandFinder()}\n            disabled={this.state.islandFinderDisabled}\n          >\n            Find Islands\n          </button>\n          <button\n            className=\"btn hvr-sweep-to-right\"\n            onClick={() => this.resetArray()}\n            disabled={this.state.resetButtonDisabled}\n          >\n            Reset Array\n          </button>\n        </div>\n        <br></br>\n        <div className=\"container\">\n          {this.state.array.map((row, idx) =>\n            row.map((value, idx2) => (\n              <div\n                className=\"node\"\n                key={idx2}\n                style={{\n                  backgroundColor: value == \"1\" ? `#333 ` : `#eee`,\n                  color: value == \"1\" ? `white` : `black`,\n                }}\n              >\n                <p>\n                  <strong>{value}</strong>\n                </p>\n              </div>\n            ))\n          )}\n        </div>\n        <hr></hr>\n        <h1>Number of Islands : {this.state.n_islands}</h1>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./CovidSummary.scss\";\n\nimport { MDBDataTable } from \"mdbreact\";\nexport default class CovidSummary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    const data = {\n      columns: [\n        {\n          label: \"Country\",\n          field: \"name\",\n          sort: \"asc\",\n          width: 150,\n        },\n        {\n          label: \"totalConfirmed\",\n          field: \"totalConfirmed\",\n          sort: \"desc\",\n          width: 100,\n        },\n        {\n          label: \"newConfirmed\",\n          field: \"newConfirmed\",\n          sort: \"desc\",\n          width: 100,\n        },\n        {\n          label: \"totalDeaths\",\n          field: \"totalDeaths\",\n          sort: \"desc\",\n          width: 100,\n        },\n        {\n          label: \"newDeaths\",\n          field: \"newDeaths\",\n          sort: \"desc\",\n          width: 100,\n        },\n        {\n          label: \"totalRecovered\",\n          field: \"totalRecovered\",\n          sort: \"desc\",\n          width: 100,\n        },\n        {\n          label: \"newRecovered\",\n          field: \"newRecovered\",\n          sort: \"desc\",\n          width: 100,\n        },\n        {\n          label: \"lastUpdate\",\n          field: \"lastUpdate\",\n          sort: \"desc\",\n          width: 150,\n        },\n      ],\n      rows: [],\n    };\n    fetch(\"https://api.covid19api.com/summary\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((all) => {\n        let global = {\n          name: \"Global\",\n          totalConfirmed: all.Global.TotalConfirmed,\n          newConfirmed: all.Global.NewConfirmed,\n          totalDeaths: all.Global.TotalDeaths,\n          newDeaths: all.Global.NewDeaths,\n          totalRecovered: all.Global.TotalRecovered,\n          newRecovered: all.Global.NewRecovered,\n          lastUpdate: \"\",\n        };\n        data.rows.push(global);\n        all.Countries.forEach((element) => {\n          let country_row = {\n            name: element.Country,\n            totalConfirmed: element.TotalConfirmed,\n            newConfirmed: element.NewConfirmed,\n            totalDeaths: element.TotalDeaths,\n            newDeaths: element.NewDeaths,\n            totalRecovered: element.TotalRecovered,\n            newRecovered: element.NewRecovered,\n            lastUpdate: element.Date,\n          };\n          data.rows.push(country_row);\n        });\n\n        this.setState({ data });\n      });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"grid-container-summary\">\n          <div className=\"header-summary\">\n            <h1>Covid19 Summary Table</h1>\n          </div>\n          <div className=\"middle-summary\">\n            <MDBDataTable striped responsive hover data={this.state.data} />\n          </div>\n          <div className=\"footer\">\n            <p>\n              <b>\n                Visualizing Covid19 data, Developed with React Framework.\n                Written by Ashkan Bashiri.\n              </b>\n            </p>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./CssFun.scss\";\n\nexport default class CssFun extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playing: false,\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"css-grid-container\">\n          <div className=\"middle\">\n            <h2>Neon Text with CSS:</h2>\n            <div className=\"wrapper\">\n              <div className=\" neon-wrapper\">\n                <div className=\"neon-text\">MASOUD BASHIRI</div>\n              </div>\n            </div>\n            <div className=\"separator\"></div>\n            <h2>Neumorphism Example:</h2>\n            <div className=\"login-div\">\n              <div className=\"logo\"></div>\n              <div className=\"title\">Login </div>\n              <div className=\"sub-title\">try to remember your password</div>\n              <div className=\"fields\">\n                <div className=\"username\">\n                  <input\n                    type=\"username\"\n                    className=\"user-input\"\n                    placeholder=\"username\"\n                  />\n                </div>\n                <div className=\"password\">\n                  <input\n                    type=\"password\"\n                    className=\"pass-input\"\n                    placeholder=\"password\"\n                  />\n                </div>\n              </div>\n              <button className=\"signin-button\">Login</button>\n              <div className=\"link\">\n                <a href=\"#\">Forgot password?</a> or <a href=\"#\">Sign up</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","// @ts-ignore\nimport React, { useState } from \"react\";\n// @ts-ignore\nimport SortingVisualizer from \"./components/SortingVisualizer/SortingVisualizer\";\nimport \"./App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// @ts-ignore\nimport { BrowserRouter as Router, HashRouter, Route } from \"react-router-dom\";\n// @ts-ignore\nimport Header from \"./components/layout/Header\";\n// @ts-ignore\nimport MachineLearning from \"./components/MachineLearning/MachineLearning\";\n// @ts-ignore\nimport CovidTracker from \"./components/CovidTracker/CovidTracker\";\n// @ts-ignore\nimport IslandCounter from \"./components/IslandCounter/IslandCounter\";\n// @ts-ignore\nimport CovidSummary from \"./components/CovidSummary\";\nimport CssFun from \"./components/CssFun/CssFun\";\n// @ts-ignore\nimport ToggleButton from \"react-toggle-button\";\n/*\n<ToggleButton\n          id=\"dark-mode-toggle2\"\n          className=\"sticky_btn\"\n          value={themeValue}\n          onToggle={() => {\n            switch (theme) {\n              case \"light\": {\n                console.log(\"Changing theme from light to dark\");\n                document.body.classList.add(\"darkmode\");\n                setTheme(\"dark\");\n                setThemeValue(true);\n                break;\n              }\n              case \"dark\": {\n                console.log(\"Changing theme from dark to light\");\n                document.body.classList.remove(\"darkmode\");\n                setTheme(\"light\");\n                setThemeValue(false);\n                break;\n              }\n            }\n          }}\n        />\n*/\nfunction App() {\n  // @ts-ignore\n  const [theme, setTheme] = useState(\"light\");\n  // @ts-ignore\n  const [themeValue, setThemeValue] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <script type=\"text/javascript\" src=\"./particles.js\"></script>\n\n      <HashRouter>\n        <Header />\n\n        <Route exact path=\"/\" component={SortingVisualizer} />\n        <Route path=\"/sv\" component={SortingVisualizer} />\n        <Route path=\"/ml\" component={MachineLearning} />\n        <Route path=\"/covid19\" component={CovidTracker} />\n        <Route path=\"/covid_summary\" component={CovidSummary} />\n        <Route path=\"/leetcode\" component={IslandCounter} />\n        <Route path=\"/cssfun\" component={CssFun} />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}