{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Univ of Virginia\\\\Documents\\\\GitHub\\\\react-demo\\\\src\\\\CovidTracker\\\\CovidTracker.jsx\";\nimport React from \"react\";\nimport \"./CovidTracker.scss\";\nimport { Line } from \"react-chartjs-2\"; // Change this value for the speed of the animations.\n// Change this value for the number of bars (value) in the array.\n// This is the main color of the array bars.\n\nexport default class CovidTracker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      summary: [],\n      countries: [],\n      country_data: [],\n      labels: [],\n      datasets: [],\n      currentCountry: \"IRAN\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.covid19api.com/all\").then(response => {\n      return response.json();\n    }).then(all => {\n      let countries = [];\n      const country_data = [];\n      all.forEach(element => {\n        if (!countries.includes(element.Country)) {\n          countries.push(element.Country);\n          country_data.push({\n            country: element.Country,\n            confirmed: [element.Confirmed],\n            deaths: [element.Deaths],\n            recovered: [element.Recovered],\n            active: [element.Active],\n            dates: [element.Date]\n          });\n        } else {\n          country_data[country_data.length - 1].confirmed.push(element.Confirmed);\n          country_data[country_data.length - 1].deaths.push(element.Deaths);\n          country_data[country_data.length - 1].recovered.push(element.Recovered);\n          country_data[country_data.length - 1].active.push(element.Active);\n          country_data[country_data.length - 1].dates.push(element.Date);\n        }\n      });\n      this.setState({\n        countries\n      });\n      this.setState({\n        country_data\n      });\n    });\n  }\n\n  updatePlot() {\n    const select_ = this.state.country_data.filter(element => element.country === \"United States of America\");\n    const labels = select_[0].dates;\n    console.log(select_[0]);\n    const datasets = [{\n      label: \"#Confirmed\",\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: \"rgba(33,47,61,1)\",\n      borderColor: \"rgba(33,47,61,1)\",\n      borderWidth: 1,\n      data: select_[0].confirmed\n    }, {\n      label: \"#Deaths\",\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: \"rgba(205,92,92,1)\",\n      borderColor: \"rgba(205,92,92,1)\",\n      borderWidth: 1,\n      data: select_[0].deaths\n    }, {\n      label: \"#Recovered\",\n      fill: false,\n      lineTension: 0.5,\n      backgroundColor: \"rgba(72,201,176,1)\",\n      borderColor: \"rgba(72,201,176,1)\",\n      borderWidth: 1,\n      data: select_[0].recovered\n    }];\n    this.setState({\n      labels,\n      datasets\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Covid19 Tracker App\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.updatePlot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      data: this.state,\n      options: {\n        title: {\n          display: true,\n          text: \"Daily statistics for \" + this.state.currentCountry,\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: \"right\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \"Visualizing Covid19 data, Developed with React Framework. Written by Ashkan Bashiri.\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Univ of Virginia/Documents/GitHub/react-demo/src/CovidTracker/CovidTracker.jsx"],"names":["React","Line","CovidTracker","Component","constructor","props","state","summary","countries","country_data","labels","datasets","currentCountry","componentDidMount","fetch","then","response","json","all","forEach","element","includes","Country","push","country","confirmed","Confirmed","deaths","Deaths","recovered","Recovered","active","Active","dates","Date","length","setState","updatePlot","select_","filter","console","log","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","render","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./CovidTracker.scss\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n// Change this value for the speed of the animations.\r\n\r\n// Change this value for the number of bars (value) in the array.\r\n\r\n// This is the main color of the array bars.\r\n\r\nexport default class CovidTracker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      summary: [],\r\n      countries: [],\r\n      country_data: [],\r\n      labels: [],\r\n      datasets: [],\r\n      currentCountry: \"IRAN\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://api.covid19api.com/all\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((all) => {\r\n        let countries = [];\r\n        const country_data = [];\r\n        all.forEach((element) => {\r\n          if (!countries.includes(element.Country)) {\r\n            countries.push(element.Country);\r\n            country_data.push({\r\n              country: element.Country,\r\n              confirmed: [element.Confirmed],\r\n              deaths: [element.Deaths],\r\n              recovered: [element.Recovered],\r\n              active: [element.Active],\r\n              dates: [element.Date],\r\n            });\r\n          } else {\r\n            country_data[country_data.length - 1].confirmed.push(\r\n              element.Confirmed\r\n            );\r\n            country_data[country_data.length - 1].deaths.push(element.Deaths);\r\n            country_data[country_data.length - 1].recovered.push(\r\n              element.Recovered\r\n            );\r\n            country_data[country_data.length - 1].active.push(element.Active);\r\n            country_data[country_data.length - 1].dates.push(element.Date);\r\n          }\r\n        });\r\n        this.setState({ countries });\r\n        this.setState({ country_data });\r\n      });\r\n  }\r\n\r\n  updatePlot() {\r\n    const select_ = this.state.country_data.filter(\r\n      (element) => element.country === \"United States of America\"\r\n    );\r\n    const labels = select_[0].dates;\r\n    console.log(select_[0]);\r\n    const datasets = [\r\n      {\r\n        label: \"#Confirmed\",\r\n        fill: false,\r\n        lineTension: 0.5,\r\n        backgroundColor: \"rgba(33,47,61,1)\",\r\n        borderColor: \"rgba(33,47,61,1)\",\r\n        borderWidth: 1,\r\n        data: select_[0].confirmed,\r\n      },\r\n      {\r\n        label: \"#Deaths\",\r\n        fill: false,\r\n        lineTension: 0.5,\r\n        backgroundColor: \"rgba(205,92,92,1)\",\r\n        borderColor: \"rgba(205,92,92,1)\",\r\n        borderWidth: 1,\r\n        data: select_[0].deaths,\r\n      },\r\n      {\r\n        label: \"#Recovered\",\r\n        fill: false,\r\n        lineTension: 0.5,\r\n        backgroundColor: \"rgba(72,201,176,1)\",\r\n        borderColor: \"rgba(72,201,176,1)\",\r\n        borderWidth: 1,\r\n        data: select_[0].recovered,\r\n      },\r\n    ];\r\n    this.setState({ labels, datasets });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"grid-container\">\r\n          <div className=\"header\">\r\n            <h1>Covid19 Tracker App</h1>\r\n          </div>\r\n          <div className=\"middle\">\r\n            <button onClick={this.updatePlot}></button>\r\n            <Line\r\n              data={this.state}\r\n              options={{\r\n                title: {\r\n                  display: true,\r\n                  text: \"Daily statistics for \" + this.state.currentCountry,\r\n                  fontSize: 20,\r\n                },\r\n                legend: {\r\n                  display: true,\r\n                  position: \"right\",\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <p>\r\n            <b>\r\n              Visualizing Covid19 data, Developed with React Framework. Written\r\n              by Ashkan Bashiri.\r\n            </b>\r\n          </p>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}