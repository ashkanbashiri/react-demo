{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Univ of Virginia\\\\Documents\\\\GitHub\\\\react-demo\\\\src\\\\CovidTracker\\\\CovidTracker.jsx\";\nimport React from \"react\";\nimport \"./CovidTracker.scss\";\nimport { Line } from \"react-chartjs-2\";\nimport Select from \"react-select\"; // Change this value for the speed of the animations.\n// Change this value for the number of bars (value) in the array.\n// This is the main color of the array bars.\n\nexport default class CovidTracker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCountryChange = selectedOption => {\n      this.setState({\n        selectedCountry: selectedOption.value\n      }, () => {\n        console.log(this.state.country_data);\n        console.log(this.state.selectedCountry);\n        const select_ = this.state.country_data.filter(element => element.country == this.state.selectedCountry);\n        console.log(select_);\n        var labels = select_[0].dates;\n        console.log(labels);\n        var datasets = [{\n          label: \"#Confirmed\",\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: \"rgba(33,47,61,1)\",\n          borderColor: \"rgba(33,47,61,1)\",\n          borderWidth: 1,\n          data: select_[0].confirmed\n        }, {\n          label: \"#Deaths\",\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: \"rgba(205,92,92,1)\",\n          borderColor: \"rgba(205,92,92,1)\",\n          borderWidth: 1,\n          data: select_[0].deaths\n        }, {\n          label: \"#Recovered\",\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: \"rgba(72,201,176,1)\",\n          borderColor: \"rgba(72,201,176,1)\",\n          borderWidth: 1,\n          data: select_[0].recovered\n        }];\n        this.setState({\n          labels: labels,\n          datasets: datasets\n        }, () => {\n          this.setState({\n            labels: labels,\n            datasets: datasets\n          });\n        });\n      });\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCountryChange = this.handleCountryChange.bind(this);\n    this.state = {\n      summary: [],\n      countries: [],\n      country_data: [],\n      labels: [],\n      datasets: [],\n      selectedCountry: \"China\",\n      options: []\n    };\n  }\n\n  componentDidMount() {\n    const options = [];\n    fetch(\"https://api.covid19api.com/all\").then(response => {\n      return response.json();\n    }).then(all => {\n      let countries = [];\n      const country_data = [];\n      all.forEach(element => {\n        if (!countries.includes(element.Country) && element.Province === \"\") {\n          countries.push(element.Country);\n          country_data.push({\n            country: element.Country,\n            confirmed: [element.Confirmed],\n            deaths: [element.Deaths],\n            recovered: [element.Recovered],\n            active: [element.Active],\n            dates: [element.Date]\n          });\n          options.push({\n            value: element.Country,\n            label: element.Country\n          });\n        } else if (element.Province === \"\") {\n          country_data[country_data.length - 1].confirmed.push(element.Confirmed);\n          country_data[country_data.length - 1].deaths.push(element.Deaths);\n          country_data[country_data.length - 1].recovered.push(element.Recovered);\n          country_data[country_data.length - 1].active.push(element.Active);\n          country_data[country_data.length - 1].dates.push(element.Date);\n        }\n      });\n      this.setState({\n        options\n      });\n      this.setState({\n        countries\n      });\n      this.setState({\n        country_data\n      });\n    });\n  }\n\n  rnd_range(mn, mx) {\n    return Math.random() * (mx - mn) + mn;\n  }\n\n  handleSubmit() {\n    let random_country = this.state.countries[Math.floor(this.rnd_range(0, this.state.countries.length)) - 1];\n    this.setState({\n      selectedCountry: random_country\n    }, () => {\n      console.log(this.state.selectedCountry);\n      const select_ = this.state.country_data.filter(element => element.country == this.state.selectedCountry);\n      var labels = select_[0].dates;\n      console.log(labels);\n      var datasets = [{\n        label: \"#Confirmed\",\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: \"rgba(33,47,61,1)\",\n        borderColor: \"rgba(33,47,61,1)\",\n        borderWidth: 1,\n        data: select_[0].confirmed\n      }, {\n        label: \"#Deaths\",\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: \"rgba(205,92,92,1)\",\n        borderColor: \"rgba(205,92,92,1)\",\n        borderWidth: 1,\n        data: select_[0].deaths\n      }, {\n        label: \"#Recovered\",\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: \"rgba(72,201,176,1)\",\n        borderColor: \"rgba(72,201,176,1)\",\n        borderWidth: 1,\n        data: select_[0].recovered\n      }];\n      this.setState({\n        labels: labels,\n        datasets: datasets\n      }, () => {\n        this.setState({\n          labels: labels,\n          datasets: datasets\n        });\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, \"Covid19 Tracker App\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      onChange: this.handleCountryChange,\n      options: this.state.options,\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: this.state,\n      options: {\n        title: {\n          display: true,\n          text: \"Daily statistics for \" + this.state.selectedCountry,\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: \"right\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, \"Visualizing Covid19 data, Developed with React Framework. Written by Ashkan Bashiri.\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Univ of Virginia/Documents/GitHub/react-demo/src/CovidTracker/CovidTracker.jsx"],"names":["React","Line","Select","CovidTracker","Component","constructor","props","handleCountryChange","selectedOption","setState","selectedCountry","value","console","log","state","country_data","select_","filter","element","country","labels","dates","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","data","confirmed","deaths","recovered","handleSubmit","bind","summary","countries","options","componentDidMount","fetch","then","response","json","all","forEach","includes","Country","Province","push","Confirmed","Deaths","Recovered","active","Active","Date","length","rnd_range","mn","mx","Math","random","random_country","floor","render","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./CovidTracker.scss\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport Select from \"react-select\";\r\n\r\n// Change this value for the speed of the animations.\r\n\r\n// Change this value for the number of bars (value) in the array.\r\n\r\n// This is the main color of the array bars.\r\n\r\nexport default class CovidTracker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCountryChange = this.handleCountryChange.bind(this);\r\n\r\n    this.state = {\r\n      summary: [],\r\n      countries: [],\r\n      country_data: [],\r\n      labels: [],\r\n      datasets: [],\r\n      selectedCountry: \"China\",\r\n      options: [],\r\n    };\r\n  }\r\n  handleCountryChange = (selectedOption) => {\r\n    this.setState({ selectedCountry: selectedOption.value }, () => {\r\n      console.log(this.state.country_data);\r\n      console.log(this.state.selectedCountry);\r\n      const select_ = this.state.country_data.filter(\r\n        (element) => element.country == this.state.selectedCountry\r\n      );\r\n      console.log(select_);\r\n      var labels = select_[0].dates;\r\n      console.log(labels);\r\n      var datasets = [\r\n        {\r\n          label: \"#Confirmed\",\r\n          fill: false,\r\n          lineTension: 0.5,\r\n          backgroundColor: \"rgba(33,47,61,1)\",\r\n          borderColor: \"rgba(33,47,61,1)\",\r\n          borderWidth: 1,\r\n          data: select_[0].confirmed,\r\n        },\r\n        {\r\n          label: \"#Deaths\",\r\n          fill: false,\r\n          lineTension: 0.5,\r\n          backgroundColor: \"rgba(205,92,92,1)\",\r\n          borderColor: \"rgba(205,92,92,1)\",\r\n          borderWidth: 1,\r\n          data: select_[0].deaths,\r\n        },\r\n        {\r\n          label: \"#Recovered\",\r\n          fill: false,\r\n          lineTension: 0.5,\r\n          backgroundColor: \"rgba(72,201,176,1)\",\r\n          borderColor: \"rgba(72,201,176,1)\",\r\n          borderWidth: 1,\r\n          data: select_[0].recovered,\r\n        },\r\n      ];\r\n      this.setState({ labels: labels, datasets: datasets }, () => {\r\n        this.setState({ labels: labels, datasets: datasets });\r\n      });\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    const options = [];\r\n\r\n    fetch(\"https://api.covid19api.com/all\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((all) => {\r\n        let countries = [];\r\n        const country_data = [];\r\n        all.forEach((element) => {\r\n          if (!countries.includes(element.Country) && element.Province === \"\") {\r\n            countries.push(element.Country);\r\n            country_data.push({\r\n              country: element.Country,\r\n              confirmed: [element.Confirmed],\r\n              deaths: [element.Deaths],\r\n              recovered: [element.Recovered],\r\n              active: [element.Active],\r\n              dates: [element.Date],\r\n            });\r\n            options.push({ value: element.Country, label: element.Country });\r\n          } else if (element.Province === \"\") {\r\n            country_data[country_data.length - 1].confirmed.push(\r\n              element.Confirmed\r\n            );\r\n            country_data[country_data.length - 1].deaths.push(element.Deaths);\r\n            country_data[country_data.length - 1].recovered.push(\r\n              element.Recovered\r\n            );\r\n            country_data[country_data.length - 1].active.push(element.Active);\r\n            country_data[country_data.length - 1].dates.push(element.Date);\r\n          }\r\n        });\r\n        this.setState({ options });\r\n        this.setState({ countries });\r\n        this.setState({ country_data });\r\n      });\r\n  }\r\n  rnd_range(mn, mx) {\r\n    return Math.random() * (mx - mn) + mn;\r\n  }\r\n\r\n  handleSubmit() {\r\n    let random_country = this.state.countries[\r\n      Math.floor(this.rnd_range(0, this.state.countries.length)) - 1\r\n    ];\r\n\r\n    this.setState({ selectedCountry: random_country }, () => {\r\n      console.log(this.state.selectedCountry);\r\n\r\n      const select_ = this.state.country_data.filter(\r\n        (element) => element.country == this.state.selectedCountry\r\n      );\r\n      var labels = select_[0].dates;\r\n      console.log(labels);\r\n\r\n      var datasets = [\r\n        {\r\n          label: \"#Confirmed\",\r\n          fill: false,\r\n          lineTension: 0.5,\r\n          backgroundColor: \"rgba(33,47,61,1)\",\r\n          borderColor: \"rgba(33,47,61,1)\",\r\n          borderWidth: 1,\r\n          data: select_[0].confirmed,\r\n        },\r\n        {\r\n          label: \"#Deaths\",\r\n          fill: false,\r\n          lineTension: 0.5,\r\n          backgroundColor: \"rgba(205,92,92,1)\",\r\n          borderColor: \"rgba(205,92,92,1)\",\r\n          borderWidth: 1,\r\n          data: select_[0].deaths,\r\n        },\r\n        {\r\n          label: \"#Recovered\",\r\n          fill: false,\r\n          lineTension: 0.5,\r\n          backgroundColor: \"rgba(72,201,176,1)\",\r\n          borderColor: \"rgba(72,201,176,1)\",\r\n          borderWidth: 1,\r\n          data: select_[0].recovered,\r\n        },\r\n      ];\r\n      this.setState({ labels: labels, datasets: datasets }, () => {\r\n        this.setState({ labels: labels, datasets: datasets });\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"grid-container\">\r\n          <div className=\"header\">\r\n            <h1>Covid19 Tracker App</h1>\r\n          </div>\r\n          <div className=\"left\">\r\n            <Select\r\n              onChange={this.handleCountryChange}\r\n              options={this.state.options}\r\n              autoFocus={true}\r\n            />\r\n          </div>\r\n          <div className=\"middle\">\r\n            <Line\r\n              data={this.state}\r\n              options={{\r\n                title: {\r\n                  display: true,\r\n                  text: \"Daily statistics for \" + this.state.selectedCountry,\r\n                  fontSize: 20,\r\n                },\r\n                legend: {\r\n                  display: true,\r\n                  position: \"right\",\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <p>\r\n            <b>\r\n              Visualizing Covid19 data, Developed with React Framework. Written\r\n              by Ashkan Bashiri.\r\n            </b>\r\n          </p>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}