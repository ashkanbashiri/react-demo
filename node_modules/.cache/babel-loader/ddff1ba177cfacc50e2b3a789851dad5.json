{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Univ of Virginia\\\\Documents\\\\GitHub\\\\react-demo\\\\src\\\\CovidSummary.jsx\";\nimport React from \"react\";\nimport { MDBDataTable } from \"mdbreact\";\nexport default class CovidSummary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const data = {\n      columns: [{\n        label: \"country\",\n        field: \"country\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        label: \"totalConfirmed\",\n        field: \"totalConfirmed\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        label: \"newConfirmed\",\n        field: \"newConfirmed\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        label: \"totalDeaths\",\n        field: \"totalDeaths\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        label: \"newDeaths\",\n        field: \"newDeaths\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        label: \"totalRecovered\",\n        field: \"totalRecovered\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        label: \"newRecovered\",\n        field: \"totalRecovered\",\n        sort: \"asc\",\n        width: 150\n      }, {\n        label: \"lastUpdate\",\n        field: \"lastUpdate\",\n        sort: \"asc\",\n        width: 150\n      }],\n      rows: []\n    };\n    fetch(\"https://api.covid19api.com/summary\").then(response => {\n      return response.json();\n    }).then(all => {\n      let global = {\n        country: \"Global\",\n        totalConfirmed: all.Global.TotalConfirmed,\n        newConfirmed: all.Global.NewConfirmed,\n        totalDeaths: all.Global.TotalDeaths,\n        newDeaths: all.Global.NewDeaths,\n        totalRecovered: all.Global.TotalRecovered,\n        newRecovered: all.Global.NewRecovered,\n        lastUpdate: \"\"\n      };\n      data.rows.push(global);\n      all.Countries.forEach(element => {\n        let country_row = {\n          country: element.Country,\n          totalConfirmed: element.TotalConfirmed,\n          newConfirmed: element.NewConfirmed,\n          totalDeaths: element.TotalDeaths,\n          newDeaths: element.NewDeaths,\n          totalRecovered: element.TotalRecovered,\n          newRecovered: element.NewRecovered,\n          lastUpdate: element.Date\n        };\n        data.rows.push(country_row);\n      });\n      this.setState({\n        data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(MDBDataTable, {\n      striped: true,\n      bordered: true,\n      small: true,\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 12\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Univ of Virginia/Documents/GitHub/react-demo/src/CovidSummary.jsx"],"names":["React","MDBDataTable","CovidSummary","Component","constructor","props","state","data","componentDidMount","columns","label","field","sort","width","rows","fetch","then","response","json","all","global","country","totalConfirmed","Global","TotalConfirmed","newConfirmed","NewConfirmed","totalDeaths","TotalDeaths","newDeaths","NewDeaths","totalRecovered","TotalRecovered","newRecovered","NewRecovered","lastUpdate","push","Countries","forEach","element","country_row","Country","Date","setState","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nexport default class CovidSummary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: \"country\",\r\n          field: \"country\",\r\n          sort: \"asc\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"totalConfirmed\",\r\n          field: \"totalConfirmed\",\r\n          sort: \"asc\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"newConfirmed\",\r\n          field: \"newConfirmed\",\r\n          sort: \"asc\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"totalDeaths\",\r\n          field: \"totalDeaths\",\r\n          sort: \"asc\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"newDeaths\",\r\n          field: \"newDeaths\",\r\n          sort: \"asc\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"totalRecovered\",\r\n          field: \"totalRecovered\",\r\n          sort: \"asc\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"newRecovered\",\r\n          field: \"totalRecovered\",\r\n          sort: \"asc\",\r\n          width: 150,\r\n        },\r\n        {\r\n          label: \"lastUpdate\",\r\n          field: \"lastUpdate\",\r\n          sort: \"asc\",\r\n          width: 150,\r\n        },\r\n      ],\r\n      rows: [],\r\n    };\r\n    fetch(\"https://api.covid19api.com/summary\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((all) => {\r\n        let global = {\r\n          country: \"Global\",\r\n          totalConfirmed: all.Global.TotalConfirmed,\r\n          newConfirmed: all.Global.NewConfirmed,\r\n          totalDeaths: all.Global.TotalDeaths,\r\n          newDeaths: all.Global.NewDeaths,\r\n          totalRecovered: all.Global.TotalRecovered,\r\n          newRecovered: all.Global.NewRecovered,\r\n          lastUpdate: \"\",\r\n        };\r\n        data.rows.push(global);\r\n        all.Countries.forEach((element) => {\r\n          let country_row = {\r\n            country: element.Country,\r\n            totalConfirmed: element.TotalConfirmed,\r\n            newConfirmed: element.NewConfirmed,\r\n            totalDeaths: element.TotalDeaths,\r\n            newDeaths: element.NewDeaths,\r\n            totalRecovered: element.TotalRecovered,\r\n            newRecovered: element.NewRecovered,\r\n            lastUpdate: element.Date,\r\n          };\r\n          data.rows.push(country_row);\r\n        });\r\n\r\n        this.setState({ data });\r\n      });\r\n  }\r\n  render() {\r\n    return <MDBDataTable striped bordered small data={this.state.data} />;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}