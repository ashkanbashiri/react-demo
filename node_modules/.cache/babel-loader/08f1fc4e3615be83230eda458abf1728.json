{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Univ of Virginia\\\\Documents\\\\GitHub\\\\react-demo\\\\src\\\\SortingVisualizer\\\\SortingVisualizer.jsx\";\nimport React from \"react\";\nimport { getMergeSortAnimations, getquickSortAnimations, getBubbleSortAnimations, getHeapSortAnimations } from \"../sortingAlgorithms/sortingAlgorithms.js\";\nimport \"./SortingVisualizer.scss\";\nconst PRIMARY_COLOR = \"#57a18b\";\nconst NEUTRAL_COLOR = \"#0000FF\"; // This is the color of array bars that are being compared throughout the animations.\n\nconst SECONDARY_COLOR = \"orangered\";\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n      showmsg: false,\n      arr_size: 100,\n      animation_speed: 10,\n      quickSortDisabled: false,\n      heapSortDisabled: false,\n      mergeSortDisabled: false,\n      bubbleSortDisabled: false,\n      sliderDisabled: false,\n      resetArrayDisabled: false,\n      theme: \"light\"\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n    document.body.classList.remove(\"darkmode\");\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < this.state.arr_size; i++) {\n      array.push(randomIntFromInterval(1, 400));\n    }\n\n    this.setState({\n      array: array\n    });\n\n    if (array.length >= 100) {\n      this.setState({\n        animation_speed: 10\n      });\n    } else {\n      this.setState({\n        animation_speed: 15\n      });\n    }\n  }\n\n  disableAll() {\n    this.setState({\n      quickSortDisabled: true,\n      heapSortDisabled: true,\n      mergeSortDisabled: true,\n      bubbleSortDisabled: true,\n      sliderDisabled: true,\n      resetArrayDisabled: true\n    });\n  }\n\n  enableAll() {\n    this.setState({\n      quickSortDisabled: false,\n      heapSortDisabled: false,\n      mergeSortDisabled: false,\n      bubbleSortDisabled: false,\n      sliderDisabled: false,\n      resetArrayDisabled: false\n    });\n  }\n\n  mergeSort() {\n    console.log(this.state.animation_speed);\n    this.disableAll();\n    const [animations, temp] = getMergeSortAnimations(this.state.array.slice());\n\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const tooltips = document.getElementsByClassName(\"tooltiptext\");\n      const isColorChange = i % 3 !== 2;\n\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * this.state.animation_speed);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          const tooltip = tooltips[barOneIdx];\n          barOneStyle.height = `${newHeight}px`;\n          tooltip.innerHTML = newHeight;\n          if (i == animations.length - 1) this.enableAll();\n        }, i * this.state.animation_speed);\n      }\n    }\n  }\n\n  quickSort() {\n    this.disableAll();\n    const [animations, temp] = getquickSortAnimations(this.state.array.slice());\n    console.log(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const tooltips = document.getElementsByClassName(\"tooltiptext\");\n      const isColorChange = i % 4 < 2;\n\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * this.state.animation_speed);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          const tooltip = tooltips[barOneIdx];\n          barOneStyle.height = `${newHeight}px`;\n          tooltip.innerHTML = newHeight;\n          if (i == animations.length - 1) this.enableAll();\n        }, i * this.state.animation_speed);\n      }\n    }\n  }\n\n  afterSort() {}\n\n  heapSort() {\n    this.disableAll();\n    const [animations, temp] = getHeapSortAnimations(this.state.array.slice(), this.state.arr_size);\n    console.log(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const tooltips = document.getElementsByClassName(\"tooltiptext\");\n      const isColorChange = i % 4 < 2;\n\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * this.state.animation_speed);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          const tooltip = tooltips[barOneIdx];\n          barOneStyle.height = `${newHeight}px`;\n          tooltip.innerHTML = newHeight;\n          if (i == animations.length - 1) this.enableAll();\n        }, i * this.state.animation_speed);\n      }\n    }\n  }\n\n  bubbleSort() {\n    this.disableAll();\n    this.setState({\n      showmsg: true\n    });\n    setTimeout(() => {\n      this.setState({\n        showmsg: false\n      });\n    }, 3000);\n    const [animations, temp] = getBubbleSortAnimations(this.state.array.slice());\n\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const tooltips = document.getElementsByClassName(\"tooltiptext\");\n      const isColorChange = i % 4 < 2;\n\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * this.state.animation_speed);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          const tooltip = tooltips[barOneIdx];\n          barOneStyle.height = `${newHeight}px`;\n          tooltip.innerHTML = newHeight;\n          if (i == animations.length - 1) this.enableAll();\n        }, i * this.state.animation_speed);\n      }\n    }\n  }\n\n  testSortingAlgorithms() {\n    for (let i = 0; i < 100; i++) {\n      const array = [];\n      const length = randomIntFromInterval(40, 150);\n\n      for (let i = 0; i < length; i++) {\n        array.push(randomIntFromInterval(1, 1000));\n      }\n\n      const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n      const [tempArray3, sortedArray3] = getquickSortAnimations(array.slice());\n      const [tempArray, sortedArray] = getMergeSortAnimations(array.slice());\n      const [tempArray2, sortedArray2] = getHeapSortAnimations(array.slice(), array.length);\n\n      if (arraysAreEqual(javaScriptSortedArray, sortedArray2) == false) {\n        console.log(array.slice());\n        console.log(sortedArray2);\n      }\n    }\n  }\n\n  handleSizeChange(e) {\n    this.setState({\n      arr_size: e.target.value\n    }, () => {\n      const array = [];\n\n      for (let i = 0; i < this.state.arr_size; i++) {\n        array.push(randomIntFromInterval(1, 400));\n      }\n\n      this.setState({\n        array: array\n      });\n      console.log(this.state.arr_size);\n    });\n  } //<div className=\"tooltiptext\">{this.state.arr_size}</div>\n\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-container-sort\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-sort\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-range\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 19\n      }\n    }, \"Array Size: \")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      min: \"5\",\n      max: \"200\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"left\",\n      title: this.state.arr_size,\n      className: \"input-range\",\n      disabled: this.state.sliderDisabled,\n      value: this.state.arr_size,\n      onChange: e => {\n        this.handleSizeChange(e);\n      },\n      id: \"slider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"resetArray\",\n      className: \"btn btn-dark\",\n      disabled: this.state.resetArrayDisabled,\n      type: \"button\",\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    }, \"New Random List\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"mergeSort\",\n      disabled: this.state.mergeSortDisabled,\n      className: \"btn btn-info\",\n      onClick: () => this.mergeSort(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 15\n      }\n    }, \"Merge Sort\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"quickSort\",\n      disabled: this.state.quickSortDisabled,\n      className: \"btn btn-info\",\n      onClick: () => this.quickSort(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 15\n      }\n    }, \"Quick Sort\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"heapSort\",\n      disabled: this.state.heapSortDisabled,\n      className: \"btn btn-info\",\n      onClick: () => this.heapSort(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 15\n      }\n    }, \"Heap Sort\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"bubbleSort\",\n      disabled: this.state.bubbleSortDisabled,\n      className: \"btn btn-info\",\n      onClick: () => this.bubbleSort(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 15\n      }\n    }, \"Bubble Sort\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      style: {\n        display: \"None\"\n      },\n      onClick: () => this.testSortingAlgorithms(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }\n    }, \"Test\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middle-sort\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontFamily: `Montserrat, sans-serif`,\n        background: `transparent`,\n        margin: `0.4em 0`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }\n    }, \"Technologies:\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"txt-rotate\",\n      \"data-period\": \"1000\",\n      \"data-rotate\": \"[ \\\" HTML5\\\", \\\" CSS3\\\", \\\" React\\\", \\\" Javascript\\\" ]\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"bars\",\n      style: {\n        position: \"relative\",\n        minHeight: \"100%\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 13\n      }\n    }, array.map((value, idx) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"array-bar\",\n      key: idx,\n      style: {\n        backgroundColor: PRIMARY_COLOR,\n        height: `${value}px`,\n        width: `5px`,\n        margin: `0px 1px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tooltiptext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 19\n      }\n    }, value)))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"msg\",\n      style: {\n        display: this.state.showmsg ? \"block\" : \"None\",\n        position: `fixed`,\n        width: `500px`,\n        height: `100px`,\n        top: `50%`,\n        left: `50%`,\n        color: `gray`,\n        fontWeight: \"bold\",\n        backgroundColor: \"#fff\",\n        textAlign: \"center\",\n        marginTop: `-100px`,\n        marginLeft: `-250px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }, \"SPOILERS! BubbleSort is a bit slow --> O(N^2)\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }\n    }, \"Visualizing Sorting Algorithms, Developed with React Framework. Written by Ashkan Bashiri.\"))));\n  }\n\n} // From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\n\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction arraysAreEqual(arrayOne, arrayTwo) {\n  if (arrayOne.length !== arrayTwo.length) return false;\n\n  for (let i = 0; i < arrayOne.length; i++) {\n    if (arrayOne[i] !== arrayTwo[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["C:/Users/Univ of Virginia/Documents/GitHub/react-demo/src/SortingVisualizer/SortingVisualizer.jsx"],"names":["React","getMergeSortAnimations","getquickSortAnimations","getBubbleSortAnimations","getHeapSortAnimations","PRIMARY_COLOR","NEUTRAL_COLOR","SECONDARY_COLOR","SortingVisualizer","Component","constructor","props","state","array","showmsg","arr_size","animation_speed","quickSortDisabled","heapSortDisabled","mergeSortDisabled","bubbleSortDisabled","sliderDisabled","resetArrayDisabled","theme","componentDidMount","resetArray","document","body","classList","remove","i","push","randomIntFromInterval","setState","length","disableAll","enableAll","mergeSort","console","log","animations","temp","slice","arrayBars","getElementsByClassName","tooltips","isColorChange","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","tooltip","height","innerHTML","quickSort","afterSort","heapSort","bubbleSort","testSortingAlgorithms","javaScriptSortedArray","sort","a","b","tempArray3","sortedArray3","tempArray","sortedArray","tempArray2","sortedArray2","arraysAreEqual","handleSizeChange","e","target","value","render","display","fontFamily","background","margin","position","minHeight","map","idx","width","top","left","fontWeight","textAlign","marginTop","marginLeft","min","max","Math","floor","random","arrayOne","arrayTwo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  getMergeSortAnimations,\r\n  getquickSortAnimations,\r\n  getBubbleSortAnimations,\r\n  getHeapSortAnimations,\r\n} from \"../sortingAlgorithms/sortingAlgorithms.js\";\r\nimport \"./SortingVisualizer.scss\";\r\n\r\nconst PRIMARY_COLOR = \"#57a18b\";\r\nconst NEUTRAL_COLOR = \"#0000FF\";\r\n\r\n// This is the color of array bars that are being compared throughout the animations.\r\nconst SECONDARY_COLOR = \"orangered\";\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      array: [],\r\n      showmsg: false,\r\n      arr_size: 100,\r\n      animation_speed: 10,\r\n      quickSortDisabled: false,\r\n      heapSortDisabled: false,\r\n      mergeSortDisabled: false,\r\n      bubbleSortDisabled: false,\r\n      sliderDisabled: false,\r\n      resetArrayDisabled: false,\r\n      theme: \"light\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n    document.body.classList.remove(\"darkmode\");\r\n  }\r\n\r\n  resetArray() {\r\n    const array = [];\r\n    for (let i = 0; i < this.state.arr_size; i++) {\r\n      array.push(randomIntFromInterval(1, 400));\r\n    }\r\n    this.setState({ array: array });\r\n    if (array.length >= 100) {\r\n      this.setState({ animation_speed: 10 });\r\n    } else {\r\n      this.setState({ animation_speed: 15 });\r\n    }\r\n  }\r\n\r\n  disableAll() {\r\n    this.setState({\r\n      quickSortDisabled: true,\r\n      heapSortDisabled: true,\r\n      mergeSortDisabled: true,\r\n      bubbleSortDisabled: true,\r\n      sliderDisabled: true,\r\n      resetArrayDisabled: true,\r\n    });\r\n  }\r\n  enableAll() {\r\n    this.setState({\r\n      quickSortDisabled: false,\r\n      heapSortDisabled: false,\r\n      mergeSortDisabled: false,\r\n      bubbleSortDisabled: false,\r\n      sliderDisabled: false,\r\n      resetArrayDisabled: false,\r\n    });\r\n  }\r\n  mergeSort() {\r\n    console.log(this.state.animation_speed);\r\n    this.disableAll();\r\n    const [animations, temp] = getMergeSortAnimations(this.state.array.slice());\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const tooltips = document.getElementsByClassName(\"tooltiptext\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * this.state.animation_speed);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const tooltip = tooltips[barOneIdx];\r\n          barOneStyle.height = `${newHeight}px`;\r\n          tooltip.innerHTML = newHeight;\r\n          if (i == animations.length - 1) this.enableAll();\r\n        }, i * this.state.animation_speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  quickSort() {\r\n    this.disableAll();\r\n    const [animations, temp] = getquickSortAnimations(this.state.array.slice());\r\n    console.log(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const tooltips = document.getElementsByClassName(\"tooltiptext\");\r\n      const isColorChange = i % 4 < 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * this.state.animation_speed);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const tooltip = tooltips[barOneIdx];\r\n          barOneStyle.height = `${newHeight}px`;\r\n          tooltip.innerHTML = newHeight;\r\n          if (i == animations.length - 1) this.enableAll();\r\n        }, i * this.state.animation_speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  afterSort() {}\r\n\r\n  heapSort() {\r\n    this.disableAll();\r\n    const [animations, temp] = getHeapSortAnimations(\r\n      this.state.array.slice(),\r\n      this.state.arr_size\r\n    );\r\n    console.log(this.state.array);\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const tooltips = document.getElementsByClassName(\"tooltiptext\");\r\n      const isColorChange = i % 4 < 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * this.state.animation_speed);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const tooltip = tooltips[barOneIdx];\r\n          barOneStyle.height = `${newHeight}px`;\r\n          tooltip.innerHTML = newHeight;\r\n          if (i == animations.length - 1) this.enableAll();\r\n        }, i * this.state.animation_speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  bubbleSort() {\r\n    this.disableAll();\r\n    this.setState({ showmsg: true });\r\n    setTimeout(() => {\r\n      this.setState({ showmsg: false });\r\n    }, 3000);\r\n    const [animations, temp] = getBubbleSortAnimations(\r\n      this.state.array.slice()\r\n    );\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const tooltips = document.getElementsByClassName(\"tooltiptext\");\r\n      const isColorChange = i % 4 < 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * this.state.animation_speed);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          const tooltip = tooltips[barOneIdx];\r\n          barOneStyle.height = `${newHeight}px`;\r\n          tooltip.innerHTML = newHeight;\r\n          if (i == animations.length - 1) this.enableAll();\r\n        }, i * this.state.animation_speed);\r\n      }\r\n    }\r\n  }\r\n\r\n  testSortingAlgorithms() {\r\n    for (let i = 0; i < 100; i++) {\r\n      const array = [];\r\n      const length = randomIntFromInterval(40, 150);\r\n      for (let i = 0; i < length; i++) {\r\n        array.push(randomIntFromInterval(1, 1000));\r\n      }\r\n      const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\r\n      const [tempArray3, sortedArray3] = getquickSortAnimations(array.slice());\r\n      const [tempArray, sortedArray] = getMergeSortAnimations(array.slice());\r\n      const [tempArray2, sortedArray2] = getHeapSortAnimations(\r\n        array.slice(),\r\n        array.length\r\n      );\r\n\r\n      if (arraysAreEqual(javaScriptSortedArray, sortedArray2) == false) {\r\n        console.log(array.slice());\r\n        console.log(sortedArray2);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSizeChange(e) {\r\n    this.setState({ arr_size: e.target.value }, () => {\r\n      const array = [];\r\n      for (let i = 0; i < this.state.arr_size; i++) {\r\n        array.push(randomIntFromInterval(1, 400));\r\n      }\r\n      this.setState({ array: array });\r\n      console.log(this.state.arr_size);\r\n    });\r\n  }\r\n  //<div className=\"tooltiptext\">{this.state.arr_size}</div>\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"grid-container-sort\">\r\n          <div className=\"header-sort\">\r\n            <div>\r\n              <div className=\"input-range\">\r\n                <p>\r\n                  <b>Array Size: </b>\r\n                </p>\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"5\"\r\n                  max=\"200\"\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"left\"\r\n                  title={this.state.arr_size}\r\n                  className=\"input-range\"\r\n                  disabled={this.state.sliderDisabled}\r\n                  value={this.state.arr_size}\r\n                  onChange={(e) => {\r\n                    this.handleSizeChange(e);\r\n                  }}\r\n                  id=\"slider\"\r\n                />\r\n              </div>\r\n              <button\r\n                id=\"resetArray\"\r\n                className=\"btn btn-dark\"\r\n                disabled={this.state.resetArrayDisabled}\r\n                type=\"button\"\r\n                onClick={() => this.resetArray()}\r\n              >\r\n                New Random List\r\n              </button>\r\n            </div>\r\n            <div>\r\n              <button\r\n                id=\"mergeSort\"\r\n                disabled={this.state.mergeSortDisabled}\r\n                className=\"btn btn-info\"\r\n                onClick={() => this.mergeSort()}\r\n              >\r\n                Merge Sort\r\n              </button>\r\n            </div>\r\n            <div>\r\n              <button\r\n                id=\"quickSort\"\r\n                disabled={this.state.quickSortDisabled}\r\n                className=\"btn btn-info\"\r\n                onClick={() => this.quickSort()}\r\n              >\r\n                Quick Sort\r\n              </button>\r\n            </div>\r\n            <div>\r\n              <button\r\n                id=\"heapSort\"\r\n                disabled={this.state.heapSortDisabled}\r\n                className=\"btn btn-info\"\r\n                onClick={() => this.heapSort()}\r\n              >\r\n                Heap Sort\r\n              </button>\r\n            </div>\r\n            <div>\r\n              <button\r\n                id=\"bubbleSort\"\r\n                disabled={this.state.bubbleSortDisabled}\r\n                className=\"btn btn-info\"\r\n                onClick={() => this.bubbleSort()}\r\n              >\r\n                Bubble Sort\r\n              </button>\r\n            </div>\r\n            <button\r\n              className=\"btn btn-warning\"\r\n              style={{ display: \"None\" }}\r\n              onClick={() => this.testSortingAlgorithms()}\r\n            >\r\n              Test\r\n            </button>\r\n          </div>\r\n          <div className=\"middle-sort\">\r\n            <h1\r\n              style={{\r\n                fontFamily: `Montserrat, sans-serif`,\r\n                background: `transparent`,\r\n                margin: `0.4em 0`,\r\n              }}\r\n            >\r\n              Technologies:\r\n              <span\r\n                className=\"txt-rotate\"\r\n                data-period=\"1000\"\r\n                data-rotate='[ \" HTML5\", \" CSS3\", \" React\", \" Javascript\" ]'\r\n              ></span>\r\n            </h1>\r\n            <div\r\n              id=\"bars\"\r\n              style={{\r\n                position: \"relative\",\r\n                minHeight: \"100%\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              {array.map((value, idx) => (\r\n                <div\r\n                  className=\"array-bar\"\r\n                  key={idx}\r\n                  style={{\r\n                    backgroundColor: PRIMARY_COLOR,\r\n                    height: `${value}px`,\r\n                    width: `5px`,\r\n                    margin: `0px 1px`,\r\n                  }}\r\n                >\r\n                  <div className=\"tooltiptext\">{value}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div\r\n              id=\"msg\"\r\n              style={{\r\n                display: this.state.showmsg ? \"block\" : \"None\",\r\n                position: `fixed`,\r\n                width: `500px`,\r\n                height: `100px`,\r\n                top: `50%`,\r\n                left: `50%`,\r\n                color: `gray`,\r\n                fontWeight: \"bold\",\r\n                backgroundColor: \"#fff\",\r\n                textAlign: \"center\",\r\n                marginTop: `-100px`,\r\n                marginLeft: `-250px`,\r\n              }}\r\n            >\r\n              SPOILERS! BubbleSort is a bit slow --> O(N^2)\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <p>\r\n            <b>\r\n              Visualizing Sorting Algorithms, Developed with React Framework.\r\n              Written by Ashkan Bashiri.\r\n            </b>\r\n          </p>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\r\nfunction randomIntFromInterval(min, max) {\r\n  // min and max included\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction arraysAreEqual(arrayOne, arrayTwo) {\r\n  if (arrayOne.length !== arrayTwo.length) return false;\r\n  for (let i = 0; i < arrayOne.length; i++) {\r\n    if (arrayOne[i] !== arrayTwo[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}